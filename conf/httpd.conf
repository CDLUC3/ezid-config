ServerRoot /ezid/apache

# Modules
  #LoadModule authn_file_module modules/mod_authn_file.so
  #LoadModule authn_dbm_module modules/mod_authn_dbm.so
  #LoadModule authn_anon_module modules/mod_authn_anon.so
  #LoadModule authn_dbd_module modules/mod_authn_dbd.so
  #LoadModule authn_default_module modules/mod_authn_default.so
LoadModule authz_host_module modules/mod_authz_host.so
  #LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  #LoadModule authz_user_module modules/mod_authz_user.so
  #LoadModule authz_dbm_module modules/mod_authz_dbm.so
  #LoadModule authz_owner_module modules/mod_authz_owner.so
  #LoadModule authz_default_module modules/mod_authz_default.so
  #LoadModule auth_basic_module modules/mod_auth_basic.so
  #LoadModule auth_digest_module modules/mod_auth_digest.so
  #LoadModule dbd_module modules/mod_dbd.so
  #LoadModule dumpio_module modules/mod_dumpio.so
  #LoadModule reqtimeout_module modules/mod_reqtimeout.so
  #LoadModule ext_filter_module modules/mod_ext_filter.so
  #LoadModule include_module modules/mod_include.so
  #LoadModule filter_module modules/mod_filter.so
  #LoadModule substitute_module modules/mod_substitute.so
  #LoadModule deflate_module modules/mod_deflate.so
LoadModule log_config_module modules/mod_log_config.so
  #LoadModule logio_module modules/mod_logio.so
  #LoadModule env_module modules/mod_env.so
  #LoadModule expires_module modules/mod_expires.so
LoadModule headers_module modules/mod_headers.so
  #LoadModule ident_module modules/mod_ident.so
LoadModule setenvif_module modules/mod_setenvif.so
  #LoadModule version_module modules/mod_version.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule mime_module modules/mod_mime.so
  #LoadModule dav_module modules/mod_dav.so
  #LoadModule status_module modules/mod_status.so
  #LoadModule autoindex_module modules/mod_autoindex.so
  #LoadModule asis_module modules/mod_asis.so
  #LoadModule info_module modules/mod_info.so
  #LoadModule cgi_module modules/mod_cgi.so
  #LoadModule dav_fs_module modules/mod_dav_fs.so
  #LoadModule vhost_alias_module modules/mod_vhost_alias.so
  #LoadModule negotiation_module modules/mod_negotiation.so
LoadModule dir_module modules/mod_dir.so
  #LoadModule imagemap_module modules/mod_imagemap.so
  #LoadModule actions_module modules/mod_actions.so
  #LoadModule speling_module modules/mod_speling.so
  #LoadModule userdir_module modules/mod_userdir.so
LoadModule alias_module modules/mod_alias.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule wsgi_module modules/mod_wsgi.so

# Warts
Include WARTS/httpd.conf

# Basic configuration
DirectorySlash Off

<Directory />
  Options FollowSymLinks
  AllowOverride None
  Order Allow,Deny
  Deny from all
</Directory>

DocumentRoot /ezid/apache/htdocs
<Directory /ezid/apache/htdocs>
  Order Allow,Deny
  Allow from all
</Directory>

# Logging
ErrorLog logs/error_log
LogLevel warn
LogFormat "%{Host}i:%p %h %t \"%r\" %>s %b %D" commonplus
CustomLog logs/access_log commonplus

# MIME types
TypesConfig conf/mime.types
AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz
AddType application/x-x509-ca-cert .crt
AddType application/x-pkcs7-crl .crl

# Patch to prevent a denial of service attack.  The following
# declarations can (and should) be removed once we upgrade to Apache
# 2.4.  See <http://mail-archives.apache.org/mod_mbox/httpd-announce/
# 201108.mbox/%3C20110826103531.998348F82@minotaur.apache.org%3E> for
# more information.
SetEnvIf Range (?:,.*?){5,5} bad-range=1
RequestHeader unset Range env=bad-range
RequestHeader unset Request-Range

# SSL
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
SSLSessionCache shmcb:logs/ssl_scache(512000)
SSLSessionCacheTimeout 300
SSLMutex file:logs/ssl_mutex
NameVirtualHost *:18443
Include WARTS/ssl.conf

# Rewrites
RewriteEngine on

# Redirect non-canonical hostnames to the canonical hostname.
# Disposition after n2t.net/ezid.cdlib.org split: move to n2t.net.
RewriteCond %{HTTP_HOST} ^(www\.n2t\.net|(www\.)?n2t\.(com|info|me|org))$ [NC]
RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$
RewriteRule ^/(.*) http://n2t.net/$1 [L,R=permanent]
RewriteCond %{HTTP_HOST} ^(www\.n2t\.net|(www\.)?n2t\.(com|info|me|org))$ [NC]
RewriteRule .* - [L,F]

# Redirect resolver requests to noid.
# Disposition after n2t.net/ezid.cdlib.org split: move to n2t.net.
RewriteCond %{HTTP_HOST} =n2t.net [NC]
RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$
RewriteRule ^/(([^/:]+:|\w\d\d\d\d/).*)$ http://noid.cdlib.org/$1 [L]
RewriteCond %{HTTP_HOST} =n2t.net [NC]
RewriteRule ^/(([^/:]+:|\w\d\d\d\d/).*)$ - [L,F]

# Redirect GET and HEAD requests to n2t.net/ezid/{path} to
# ezid.cdlib.org/{path}.
# Disposition after n2t.net/ezid.cdlib.org split: move to n2t.net.
RewriteCond %{HTTP_HOST} =n2t.net [NC]
RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$
RewriteRule ^/ezid$ http://ezid.cdlib.org/ [L,R=permanent]
RewriteCond %{HTTP_HOST} =n2t.net [NC]
RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$
RewriteRule ^/ezid/(.*) http://ezid.cdlib.org/$1 [L,R=permanent]

# Rewrite all other requests to n2t.net/ezid/{path} to n2t.net/{path},
# but otherwise process as is.
# Disposition after n2t.net/ezid.cdlib.org split: move to n2t.net, but
# forbid all such requests as redirection is not possible.
RewriteCond %{HTTP_HOST} =n2t.net [NC]
RewriteRule ^/ezid$ / [L,PT]
RewriteCond %{HTTP_HOST} =n2t.net [NC]
RewriteRule ^/ezid/(.*) /$1 [L,PT]

# All other requests to n2t.net: not our problem.
# Disposition after n2t.net/ezid.cdlib.org split: remove from here,
# but otherwise really up to n2t.net.
RewriteCond %{HTTP_HOST} =n2t.net [NC]
RewriteRule .* - [L,F]

# Redirect GET and HEAD requests to ezid.lib.purdue.edu/ezid/{path} to
# ezid.lib.purdue.edu/{path}.
# Disposition after n2t.net/ezid.cdlib.org split: leave in place for
# at least a year.
RewriteCond %{HTTP_HOST} =ezid.lib.purdue.edu [NC]
RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$
RewriteRule ^/ezid$ http://ezid.lib.purdue.edu/ [L,R=permanent]
RewriteCond %{HTTP_HOST} =ezid.lib.purdue.edu [NC]
RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)$
RewriteRule ^/ezid/(.*) http://ezid.lib.purdue.edu/$1 [L,R=permanent]

# Rewrite all other requests to ezid.lib.purdue.edu/ezid/{path} to
# ezid.lib.purdue.edu/{path}, but otherwise process as is.
# Disposition after n2t.net/ezid.cdlib.org split: forbid all such
# requests.
RewriteCond %{HTTP_HOST} =ezid.lib.purdue.edu [NC]
RewriteRule ^/ezid$ / [L,PT]
RewriteCond %{HTTP_HOST} =ezid.lib.purdue.edu [NC]
RewriteRule ^/ezid/(.*) /$1 [L,PT]

# Instance-specific rewrites.
Include WARTS/rewrite.conf

# EZID
WSGIDaemonProcess site-1

WSGIScriptAlias / /ezid/apache/ezid/SITE/PROJECT/apache/django.wsgi
<Directory /ezid/apache/ezid/SITE/PROJECT/apache>
  Order Allow,Deny
  Allow from all
  WSGIApplicationGroup %{GLOBAL}
  WSGIProcessGroup site-1
  WSGIPassAuthorization on
</Directory>

Alias /static /ezid/apache/ezid/SITE/PROJECT/static
<Directory /ezid/apache/ezid/SITE/PROJECT/static>
  Order Allow,Deny
  Allow from all
</Directory>

# File visibility fixups.
Alias /robots.txt /ezid/apache/htdocs/robots.txt
